#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

struct Student
{
	char id[15];		 //准��证叄1�7
	int socre;			 //分数
	int location_number; //考场叄1�7
	int local_rank;		 //考场内排各1�7
} stu[30010];
//------------------------------------------------------------------------------------
bool cmp(Student a, Student b)
{
	//按分数从高到底排庄1�7
	if (a.socre != b.socre)
	{
		return a.socre > b.socre;
	}
	else
	{
		//分数相同按准考证从小到大排序
		return strcmp(a.id, b.id) < 0; //说明a的id小于b的id
	}
}
//-----------------------------------------------------------------------------------------
int main()
{
	int n, k, num = 0; //num为����生数，n为有几个考场，k为�1�7���场人数
	scanf("%d", &n);   //n为��场敄1�7
	//下面输入2丄1�7考场的id和score
	for (int i = 1; i <= n; i++)
	{ //遍历考场,仄1�71弢�始，不能没有丢�丄1�7考场各1�7
		//遍历每一丄1�7考场的��生的id和score
		scanf("%d", &k); //输入每一丄1�72考场的人敄1�7
		for (int j = 0; j < k; j++)
		{
			//输入考生信息
			scanf("%s %d", &stu[num].id, &stu[num].socre);
			stu[num].location_number = i;
			num++; //总��生数加1
		}

		//---------------------------------------要�1�7�每丄1�7考场考生进�1�7�排序，因为朢�后�1�7�输出��场内排各1�7------------------------------------------------------------
		//将�1�7���场的��生排序，输入了2丄1�7考场的��生
		//假�1�7�这丄1�7考场共k丄1�7考生，��人数为num，把考生信息存在数组丄1�7，数组下标的区间就是[num-k,num)
		//排序直接用sort函数
		sort(stu + num - k, stu + num, cmp);
		//把�1�7���场的�1�7�1�7丢�丄1�7排名丄1�71
		stu[num - k].local_rank = 1;
		//除了笄1�7丢�丄1�7，�1�7�其余��生进�1�7�排庄1�7
		for (int j = num - k + 1; j < num; j++)
		{ //不能等于num，因为取不到
			//---------------------------------------------------------------------------------------------------
			//如果同分
			if (stu[j].socre == stu[j - 1].socre)
			{
				stu[j].local_rank = stu[j - 1].local_rank;
			}
			else
			{
				//如果不同分，那么该位考生前面有�1�7�少人呢，注意��生排名和存考生信息数组下标之间巄1�7亄1�71＄1�7
				//那么计算考生排名的时候j要加1再减去�1�7�1�7丢�名的local_rank，才昄1�7该��生的local_rank,因为j昄1�7考生信息的数组下栄1�7
				stu[j].local_rank = j + 1 - (num - k); //该��生的排名减去�1�7�1�7丢�丄1�7考生的排名就昄1�7他前面有多少亄1�7
			}
		}
	}
	//----------------------------二个考场扢�有��生丢�起排庄1�7,输出准��证号，排名,考场号，和��场内排各1�7---------------------------------------------
	printf("%d\n", num);	   //输出考生总人敄1�7
	sort(stu, stu + num, cmp); //将所有��生排序
	int r = 1;				   //当前考生的排各1�7
	for (int i = 0; i < num; i++)
	{
		if (i > 0 && stu[i].socre != stu[i - 1].socre)
		{
			r = i + 1; //考生排名劄1�71
		}

		printf("%s %d %d %d\n", stu[i].id, r, stu[i].location_number, stu[i].local_rank);
	}
return 0;
}